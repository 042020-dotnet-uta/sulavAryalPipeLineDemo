// <auto-generated />
using System;
using ConsoleShopper.Repository.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ConsoleShopper.Repository.DataAccess.CSMigration
{
    [DbContext(typeof(ConsoleShopperDbContext))]
    [Migration("20200505130406_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ConsoleShopper.Domain.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("PhoneNo")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<int>("UserTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserTypeId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "lflear0@outlook.com",
                            FirstName = "Sulav",
                            LastName = "Aryal",
                            Password = "password",
                            UserTypeId = 1
                        },
                        new
                        {
                            Id = 2,
                            Email = "dcove@networking.org",
                            FirstName = "Danyelle",
                            LastName = "Tsosie",
                            Password = "password",
                            UserTypeId = 2
                        },
                        new
                        {
                            Id = 3,
                            Email = "acloney2@dropbox.com",
                            FirstName = "Brigitte",
                            LastName = "Laufer",
                            Password = "password",
                            UserTypeId = 2
                        },
                        new
                        {
                            Id = 4,
                            Email = "tscurrell3@reuters.com",
                            FirstName = "Bettie",
                            LastName = "Turek",
                            Password = "password",
                            UserTypeId = 2
                        },
                        new
                        {
                            Id = 5,
                            Email = "mfonzone4@vk.com",
                            FirstName = "Kenneth",
                            LastName = "Windsor",
                            Password = "password",
                            UserTypeId = 2
                        },
                        new
                        {
                            Id = 6,
                            Email = "igallaccio5@tmall.com",
                            FirstName = "Maribeth",
                            LastName = "Fontenot",
                            Password = "password",
                            UserTypeId = 2
                        },
                        new
                        {
                            Id = 7,
                            Email = "aasken6@etsy.com",
                            FirstName = "Barret",
                            LastName = "Waltrip",
                            Password = "password",
                            UserTypeId = 2
                        },
                        new
                        {
                            Id = 8,
                            Email = "dmagrane7@dagondesign.com",
                            FirstName = "Jeana",
                            LastName = "Dunston",
                            Password = "password",
                            UserTypeId = 2
                        },
                        new
                        {
                            Id = 9,
                            Email = "gdibdale8@nih.gov",
                            FirstName = "Mirian",
                            LastName = "Stroda",
                            Password = "password",
                            UserTypeId = 2
                        },
                        new
                        {
                            Id = 10,
                            Email = "acockran9@arizona.edu",
                            FirstName = "Beverley",
                            LastName = "Digangi",
                            Password = "password",
                            UserTypeId = 2
                        },
                        new
                        {
                            Id = 11,
                            Email = "ymartyna@ebay.com",
                            FirstName = "Lucilla",
                            LastName = "Chang",
                            Password = "password",
                            UserTypeId = 2
                        },
                        new
                        {
                            Id = 12,
                            Email = "cbmccaughenb@umn.com",
                            FirstName = "Gigi",
                            LastName = "Degree",
                            Password = "password",
                            UserTypeId = 2
                        },
                        new
                        {
                            Id = 13,
                            Email = "bianizzic@wisc.edu",
                            FirstName = "Taneka",
                            LastName = "Ord",
                            Password = "password",
                            UserTypeId = 2
                        },
                        new
                        {
                            Id = 14,
                            Email = "aharborowd@nbcnews.com",
                            FirstName = "Moises",
                            LastName = "Meche",
                            Password = "password",
                            UserTypeId = 2
                        },
                        new
                        {
                            Id = 15,
                            Email = "nellyatte@homestead.com",
                            FirstName = "Hans",
                            LastName = "Spurgin",
                            Password = "password",
                            UserTypeId = 2
                        },
                        new
                        {
                            Id = 16,
                            Email = "ewigginf@skyrock.com",
                            FirstName = "Mireya",
                            LastName = "Pierro",
                            Password = "password",
                            UserTypeId = 2
                        },
                        new
                        {
                            Id = 17,
                            Email = "tbarentsg@independent.co",
                            FirstName = "Susy",
                            LastName = "Argo",
                            Password = "password",
                            UserTypeId = 2
                        },
                        new
                        {
                            Id = 18,
                            Email = "mpeyroh@foxnews.com",
                            FirstName = "Althea",
                            LastName = "Dent",
                            Password = "password",
                            UserTypeId = 2
                        },
                        new
                        {
                            Id = 19,
                            Email = "jarnaudini@webmd.com",
                            FirstName = "Rosana",
                            LastName = "Purvis",
                            Password = "password",
                            UserTypeId = 2
                        },
                        new
                        {
                            Id = 20,
                            Email = "omelrosej@artisteer.com",
                            FirstName = "Serena",
                            LastName = "San",
                            Password = "password",
                            UserTypeId = 2
                        });
                });

            modelBuilder.Entity("ConsoleShopper.Domain.CustomerAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Zip")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.HasKey("Id");

                    b.HasIndex("CustomerId")
                        .IsUnique();

                    b.ToTable("CustomerAddress");

                    b.HasData(
                        new
                        {
                            Id = 3,
                            City = "Fort Worth",
                            CustomerId = 1,
                            State = "TX",
                            Street = "96 Franklin Ave.",
                            Zip = "76110"
                        },
                        new
                        {
                            Id = 2,
                            City = "Green Bay",
                            CustomerId = 2,
                            State = "WI",
                            Street = "17 Johnson Street",
                            Zip = "54302"
                        },
                        new
                        {
                            Id = 4,
                            City = "Maplewood",
                            CustomerId = 3,
                            State = "NJ",
                            Street = "752 South Main Drive",
                            Zip = "07040"
                        },
                        new
                        {
                            Id = 5,
                            City = "Gastonia",
                            CustomerId = 4,
                            State = "NC",
                            Street = "7518 Sherwood Street",
                            Zip = "28052"
                        },
                        new
                        {
                            Id = 6,
                            City = "Belleville",
                            CustomerId = 5,
                            State = "NJ",
                            Street = "6 College St.",
                            Zip = "07109"
                        },
                        new
                        {
                            Id = 1,
                            City = "Aberdeen",
                            CustomerId = 6,
                            State = "SD",
                            Street = "67 Carriage Drive",
                            Zip = "57401"
                        },
                        new
                        {
                            Id = 7,
                            City = "Missoula",
                            CustomerId = 7,
                            State = "MT",
                            Street = "580 West Deerfield Road",
                            Zip = "59801"
                        },
                        new
                        {
                            Id = 8,
                            City = "West Palm Beach",
                            CustomerId = 8,
                            State = "FL",
                            Street = "37 Pilgrim Lane",
                            Zip = "33404"
                        },
                        new
                        {
                            Id = 9,
                            City = "Roseville",
                            CustomerId = 9,
                            State = "MI",
                            Street = "84 Woodsman St.",
                            Zip = "48066"
                        },
                        new
                        {
                            Id = 10,
                            City = "Green Cove Springs",
                            CustomerId = 10,
                            State = "FL",
                            Street = "89 North Devonshire Dr",
                            Zip = "32043"
                        },
                        new
                        {
                            Id = 11,
                            City = "Wenatchee",
                            CustomerId = 11,
                            State = "WA",
                            Street = "3 Myers Street",
                            Zip = "98801"
                        },
                        new
                        {
                            Id = 12,
                            City = "Munster",
                            CustomerId = 12,
                            State = "IN",
                            Street = "265 Prairie St.",
                            Zip = "46321"
                        },
                        new
                        {
                            Id = 13,
                            City = "Huntington",
                            CustomerId = 13,
                            State = "NY",
                            Street = "467 South Smoky Hollow St",
                            Zip = "11743"
                        },
                        new
                        {
                            Id = 14,
                            City = "Meadow",
                            CustomerId = 14,
                            State = "NJ",
                            Street = "48 W. Oak St.",
                            Zip = "08003"
                        },
                        new
                        {
                            Id = 15,
                            City = "Lancaster",
                            CustomerId = 15,
                            State = "NY",
                            Street = "41 Buckingham Ave",
                            Zip = "14086"
                        },
                        new
                        {
                            Id = 16,
                            City = "Manahawkin",
                            CustomerId = 16,
                            State = "NJ",
                            Street = "290 Marsh St. ",
                            Zip = "08050"
                        },
                        new
                        {
                            Id = 17,
                            City = "Canandaigua",
                            CustomerId = 17,
                            State = "NY",
                            Street = "206 New Saddle Ave.",
                            Zip = "14424"
                        },
                        new
                        {
                            Id = 18,
                            City = "Eastpointe",
                            CustomerId = 18,
                            State = "MI",
                            Street = "58 Fifth St.",
                            Zip = "48021"
                        },
                        new
                        {
                            Id = 19,
                            City = "Saint Augustine",
                            CustomerId = 19,
                            State = "FL",
                            Street = "2 State St.",
                            Zip = "32084"
                        },
                        new
                        {
                            Id = 20,
                            City = "Cedar Rapids",
                            CustomerId = 20,
                            State = "AZ",
                            Street = "8471 East Brandywine Street",
                            Zip = "52402"
                        });
                });

            modelBuilder.Entity("ConsoleShopper.Domain.InventoryItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTimeOffset?>("ChangedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("LoggedUserId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("StoreId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("StoreId");

                    b.ToTable("Inventory");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ChangedDate = new DateTimeOffset(new DateTime(2020, 5, 5, 6, 4, 6, 298, DateTimeKind.Unspecified).AddTicks(675), new TimeSpan(0, -7, 0, 0, 0)),
                            LoggedUserId = 1,
                            ProductId = 1,
                            Quantity = 20,
                            StoreId = 1
                        },
                        new
                        {
                            Id = 2,
                            ChangedDate = new DateTimeOffset(new DateTime(2020, 5, 5, 6, 4, 6, 299, DateTimeKind.Unspecified).AddTicks(6948), new TimeSpan(0, -7, 0, 0, 0)),
                            LoggedUserId = 1,
                            ProductId = 2,
                            Quantity = 20,
                            StoreId = 1
                        },
                        new
                        {
                            Id = 3,
                            ChangedDate = new DateTimeOffset(new DateTime(2020, 5, 5, 6, 4, 6, 299, DateTimeKind.Unspecified).AddTicks(6985), new TimeSpan(0, -7, 0, 0, 0)),
                            LoggedUserId = 1,
                            ProductId = 3,
                            Quantity = 20,
                            StoreId = 1
                        },
                        new
                        {
                            Id = 4,
                            ChangedDate = new DateTimeOffset(new DateTime(2020, 5, 5, 6, 4, 6, 299, DateTimeKind.Unspecified).AddTicks(6993), new TimeSpan(0, -7, 0, 0, 0)),
                            LoggedUserId = 1,
                            ProductId = 4,
                            Quantity = 20,
                            StoreId = 1
                        },
                        new
                        {
                            Id = 5,
                            ChangedDate = new DateTimeOffset(new DateTime(2020, 5, 5, 6, 4, 6, 299, DateTimeKind.Unspecified).AddTicks(6999), new TimeSpan(0, -7, 0, 0, 0)),
                            LoggedUserId = 1,
                            ProductId = 5,
                            Quantity = 20,
                            StoreId = 1
                        },
                        new
                        {
                            Id = 6,
                            ChangedDate = new DateTimeOffset(new DateTime(2020, 5, 5, 6, 4, 6, 299, DateTimeKind.Unspecified).AddTicks(7005), new TimeSpan(0, -7, 0, 0, 0)),
                            LoggedUserId = 1,
                            ProductId = 6,
                            Quantity = 20,
                            StoreId = 1
                        },
                        new
                        {
                            Id = 7,
                            ChangedDate = new DateTimeOffset(new DateTime(2020, 5, 5, 6, 4, 6, 299, DateTimeKind.Unspecified).AddTicks(7010), new TimeSpan(0, -7, 0, 0, 0)),
                            LoggedUserId = 1,
                            ProductId = 7,
                            Quantity = 20,
                            StoreId = 1
                        },
                        new
                        {
                            Id = 8,
                            ChangedDate = new DateTimeOffset(new DateTime(2020, 5, 5, 6, 4, 6, 299, DateTimeKind.Unspecified).AddTicks(7016), new TimeSpan(0, -7, 0, 0, 0)),
                            LoggedUserId = 1,
                            ProductId = 8,
                            Quantity = 20,
                            StoreId = 1
                        },
                        new
                        {
                            Id = 9,
                            ChangedDate = new DateTimeOffset(new DateTime(2020, 5, 5, 6, 4, 6, 299, DateTimeKind.Unspecified).AddTicks(7022), new TimeSpan(0, -7, 0, 0, 0)),
                            LoggedUserId = 1,
                            ProductId = 9,
                            Quantity = 20,
                            StoreId = 1
                        },
                        new
                        {
                            Id = 10,
                            ChangedDate = new DateTimeOffset(new DateTime(2020, 5, 5, 6, 4, 6, 299, DateTimeKind.Unspecified).AddTicks(7028), new TimeSpan(0, -7, 0, 0, 0)),
                            LoggedUserId = 1,
                            ProductId = 10,
                            Quantity = 20,
                            StoreId = 1
                        },
                        new
                        {
                            Id = 11,
                            ChangedDate = new DateTimeOffset(new DateTime(2020, 5, 5, 6, 4, 6, 299, DateTimeKind.Unspecified).AddTicks(7033), new TimeSpan(0, -7, 0, 0, 0)),
                            LoggedUserId = 1,
                            ProductId = 1,
                            Quantity = 20,
                            StoreId = 2
                        },
                        new
                        {
                            Id = 12,
                            ChangedDate = new DateTimeOffset(new DateTime(2020, 5, 5, 6, 4, 6, 299, DateTimeKind.Unspecified).AddTicks(7039), new TimeSpan(0, -7, 0, 0, 0)),
                            LoggedUserId = 1,
                            ProductId = 2,
                            Quantity = 20,
                            StoreId = 2
                        },
                        new
                        {
                            Id = 13,
                            ChangedDate = new DateTimeOffset(new DateTime(2020, 5, 5, 6, 4, 6, 299, DateTimeKind.Unspecified).AddTicks(7045), new TimeSpan(0, -7, 0, 0, 0)),
                            LoggedUserId = 1,
                            ProductId = 3,
                            Quantity = 20,
                            StoreId = 2
                        },
                        new
                        {
                            Id = 14,
                            ChangedDate = new DateTimeOffset(new DateTime(2020, 5, 5, 6, 4, 6, 299, DateTimeKind.Unspecified).AddTicks(7051), new TimeSpan(0, -7, 0, 0, 0)),
                            LoggedUserId = 1,
                            ProductId = 4,
                            Quantity = 20,
                            StoreId = 2
                        },
                        new
                        {
                            Id = 15,
                            ChangedDate = new DateTimeOffset(new DateTime(2020, 5, 5, 6, 4, 6, 299, DateTimeKind.Unspecified).AddTicks(7056), new TimeSpan(0, -7, 0, 0, 0)),
                            LoggedUserId = 1,
                            ProductId = 5,
                            Quantity = 20,
                            StoreId = 2
                        },
                        new
                        {
                            Id = 16,
                            ChangedDate = new DateTimeOffset(new DateTime(2020, 5, 5, 6, 4, 6, 299, DateTimeKind.Unspecified).AddTicks(7062), new TimeSpan(0, -7, 0, 0, 0)),
                            LoggedUserId = 1,
                            ProductId = 6,
                            Quantity = 20,
                            StoreId = 2
                        },
                        new
                        {
                            Id = 17,
                            ChangedDate = new DateTimeOffset(new DateTime(2020, 5, 5, 6, 4, 6, 299, DateTimeKind.Unspecified).AddTicks(7070), new TimeSpan(0, -7, 0, 0, 0)),
                            LoggedUserId = 1,
                            ProductId = 7,
                            Quantity = 20,
                            StoreId = 2
                        },
                        new
                        {
                            Id = 18,
                            ChangedDate = new DateTimeOffset(new DateTime(2020, 5, 5, 6, 4, 6, 299, DateTimeKind.Unspecified).AddTicks(7075), new TimeSpan(0, -7, 0, 0, 0)),
                            LoggedUserId = 1,
                            ProductId = 8,
                            Quantity = 20,
                            StoreId = 2
                        },
                        new
                        {
                            Id = 19,
                            ChangedDate = new DateTimeOffset(new DateTime(2020, 5, 5, 6, 4, 6, 299, DateTimeKind.Unspecified).AddTicks(7081), new TimeSpan(0, -7, 0, 0, 0)),
                            LoggedUserId = 1,
                            ProductId = 9,
                            Quantity = 20,
                            StoreId = 2
                        },
                        new
                        {
                            Id = 20,
                            ChangedDate = new DateTimeOffset(new DateTime(2020, 5, 5, 6, 4, 6, 299, DateTimeKind.Unspecified).AddTicks(7087), new TimeSpan(0, -7, 0, 0, 0)),
                            LoggedUserId = 1,
                            ProductId = 10,
                            Quantity = 20,
                            StoreId = 2
                        },
                        new
                        {
                            Id = 21,
                            ChangedDate = new DateTimeOffset(new DateTime(2020, 5, 5, 6, 4, 6, 299, DateTimeKind.Unspecified).AddTicks(7093), new TimeSpan(0, -7, 0, 0, 0)),
                            LoggedUserId = 1,
                            ProductId = 1,
                            Quantity = 20,
                            StoreId = 3
                        },
                        new
                        {
                            Id = 22,
                            ChangedDate = new DateTimeOffset(new DateTime(2020, 5, 5, 6, 4, 6, 299, DateTimeKind.Unspecified).AddTicks(7098), new TimeSpan(0, -7, 0, 0, 0)),
                            LoggedUserId = 1,
                            ProductId = 2,
                            Quantity = 20,
                            StoreId = 3
                        },
                        new
                        {
                            Id = 23,
                            ChangedDate = new DateTimeOffset(new DateTime(2020, 5, 5, 6, 4, 6, 299, DateTimeKind.Unspecified).AddTicks(7104), new TimeSpan(0, -7, 0, 0, 0)),
                            LoggedUserId = 1,
                            ProductId = 3,
                            Quantity = 20,
                            StoreId = 3
                        },
                        new
                        {
                            Id = 24,
                            ChangedDate = new DateTimeOffset(new DateTime(2020, 5, 5, 6, 4, 6, 299, DateTimeKind.Unspecified).AddTicks(7110), new TimeSpan(0, -7, 0, 0, 0)),
                            LoggedUserId = 1,
                            ProductId = 4,
                            Quantity = 20,
                            StoreId = 3
                        },
                        new
                        {
                            Id = 25,
                            ChangedDate = new DateTimeOffset(new DateTime(2020, 5, 5, 6, 4, 6, 299, DateTimeKind.Unspecified).AddTicks(7115), new TimeSpan(0, -7, 0, 0, 0)),
                            LoggedUserId = 1,
                            ProductId = 5,
                            Quantity = 20,
                            StoreId = 3
                        },
                        new
                        {
                            Id = 26,
                            ChangedDate = new DateTimeOffset(new DateTime(2020, 5, 5, 6, 4, 6, 299, DateTimeKind.Unspecified).AddTicks(7121), new TimeSpan(0, -7, 0, 0, 0)),
                            LoggedUserId = 1,
                            ProductId = 6,
                            Quantity = 20,
                            StoreId = 3
                        },
                        new
                        {
                            Id = 27,
                            ChangedDate = new DateTimeOffset(new DateTime(2020, 5, 5, 6, 4, 6, 299, DateTimeKind.Unspecified).AddTicks(7127), new TimeSpan(0, -7, 0, 0, 0)),
                            LoggedUserId = 1,
                            ProductId = 7,
                            Quantity = 20,
                            StoreId = 3
                        },
                        new
                        {
                            Id = 28,
                            ChangedDate = new DateTimeOffset(new DateTime(2020, 5, 5, 6, 4, 6, 299, DateTimeKind.Unspecified).AddTicks(7132), new TimeSpan(0, -7, 0, 0, 0)),
                            LoggedUserId = 1,
                            ProductId = 8,
                            Quantity = 20,
                            StoreId = 3
                        },
                        new
                        {
                            Id = 29,
                            ChangedDate = new DateTimeOffset(new DateTime(2020, 5, 5, 6, 4, 6, 299, DateTimeKind.Unspecified).AddTicks(7138), new TimeSpan(0, -7, 0, 0, 0)),
                            LoggedUserId = 1,
                            ProductId = 9,
                            Quantity = 20,
                            StoreId = 3
                        },
                        new
                        {
                            Id = 30,
                            ChangedDate = new DateTimeOffset(new DateTime(2020, 5, 5, 6, 4, 6, 299, DateTimeKind.Unspecified).AddTicks(7156), new TimeSpan(0, -7, 0, 0, 0)),
                            LoggedUserId = 1,
                            ProductId = 10,
                            Quantity = 20,
                            StoreId = 3
                        },
                        new
                        {
                            Id = 31,
                            ChangedDate = new DateTimeOffset(new DateTime(2020, 5, 5, 6, 4, 6, 299, DateTimeKind.Unspecified).AddTicks(7162), new TimeSpan(0, -7, 0, 0, 0)),
                            LoggedUserId = 1,
                            ProductId = 1,
                            Quantity = 20,
                            StoreId = 4
                        },
                        new
                        {
                            Id = 32,
                            ChangedDate = new DateTimeOffset(new DateTime(2020, 5, 5, 6, 4, 6, 299, DateTimeKind.Unspecified).AddTicks(7167), new TimeSpan(0, -7, 0, 0, 0)),
                            LoggedUserId = 1,
                            ProductId = 2,
                            Quantity = 20,
                            StoreId = 4
                        },
                        new
                        {
                            Id = 33,
                            ChangedDate = new DateTimeOffset(new DateTime(2020, 5, 5, 6, 4, 6, 299, DateTimeKind.Unspecified).AddTicks(7173), new TimeSpan(0, -7, 0, 0, 0)),
                            LoggedUserId = 1,
                            ProductId = 3,
                            Quantity = 20,
                            StoreId = 4
                        },
                        new
                        {
                            Id = 34,
                            ChangedDate = new DateTimeOffset(new DateTime(2020, 5, 5, 6, 4, 6, 299, DateTimeKind.Unspecified).AddTicks(7179), new TimeSpan(0, -7, 0, 0, 0)),
                            LoggedUserId = 1,
                            ProductId = 4,
                            Quantity = 20,
                            StoreId = 4
                        },
                        new
                        {
                            Id = 35,
                            ChangedDate = new DateTimeOffset(new DateTime(2020, 5, 5, 6, 4, 6, 299, DateTimeKind.Unspecified).AddTicks(7184), new TimeSpan(0, -7, 0, 0, 0)),
                            LoggedUserId = 1,
                            ProductId = 5,
                            Quantity = 20,
                            StoreId = 4
                        },
                        new
                        {
                            Id = 36,
                            ChangedDate = new DateTimeOffset(new DateTime(2020, 5, 5, 6, 4, 6, 299, DateTimeKind.Unspecified).AddTicks(7190), new TimeSpan(0, -7, 0, 0, 0)),
                            LoggedUserId = 1,
                            ProductId = 6,
                            Quantity = 20,
                            StoreId = 4
                        },
                        new
                        {
                            Id = 37,
                            ChangedDate = new DateTimeOffset(new DateTime(2020, 5, 5, 6, 4, 6, 299, DateTimeKind.Unspecified).AddTicks(7196), new TimeSpan(0, -7, 0, 0, 0)),
                            LoggedUserId = 1,
                            ProductId = 7,
                            Quantity = 20,
                            StoreId = 4
                        },
                        new
                        {
                            Id = 38,
                            ChangedDate = new DateTimeOffset(new DateTime(2020, 5, 5, 6, 4, 6, 299, DateTimeKind.Unspecified).AddTicks(7202), new TimeSpan(0, -7, 0, 0, 0)),
                            LoggedUserId = 1,
                            ProductId = 8,
                            Quantity = 20,
                            StoreId = 4
                        },
                        new
                        {
                            Id = 39,
                            ChangedDate = new DateTimeOffset(new DateTime(2020, 5, 5, 6, 4, 6, 299, DateTimeKind.Unspecified).AddTicks(7207), new TimeSpan(0, -7, 0, 0, 0)),
                            LoggedUserId = 1,
                            ProductId = 9,
                            Quantity = 20,
                            StoreId = 4
                        },
                        new
                        {
                            Id = 40,
                            ChangedDate = new DateTimeOffset(new DateTime(2020, 5, 5, 6, 4, 6, 299, DateTimeKind.Unspecified).AddTicks(7213), new TimeSpan(0, -7, 0, 0, 0)),
                            LoggedUserId = 1,
                            ProductId = 10,
                            Quantity = 20,
                            StoreId = 4
                        },
                        new
                        {
                            Id = 41,
                            ChangedDate = new DateTimeOffset(new DateTime(2020, 5, 5, 6, 4, 6, 299, DateTimeKind.Unspecified).AddTicks(7219), new TimeSpan(0, -7, 0, 0, 0)),
                            LoggedUserId = 1,
                            ProductId = 1,
                            Quantity = 20,
                            StoreId = 5
                        },
                        new
                        {
                            Id = 42,
                            ChangedDate = new DateTimeOffset(new DateTime(2020, 5, 5, 6, 4, 6, 299, DateTimeKind.Unspecified).AddTicks(7224), new TimeSpan(0, -7, 0, 0, 0)),
                            LoggedUserId = 1,
                            ProductId = 2,
                            Quantity = 20,
                            StoreId = 5
                        },
                        new
                        {
                            Id = 43,
                            ChangedDate = new DateTimeOffset(new DateTime(2020, 5, 5, 6, 4, 6, 299, DateTimeKind.Unspecified).AddTicks(7230), new TimeSpan(0, -7, 0, 0, 0)),
                            LoggedUserId = 1,
                            ProductId = 3,
                            Quantity = 20,
                            StoreId = 5
                        },
                        new
                        {
                            Id = 44,
                            ChangedDate = new DateTimeOffset(new DateTime(2020, 5, 5, 6, 4, 6, 299, DateTimeKind.Unspecified).AddTicks(7236), new TimeSpan(0, -7, 0, 0, 0)),
                            LoggedUserId = 1,
                            ProductId = 4,
                            Quantity = 20,
                            StoreId = 5
                        },
                        new
                        {
                            Id = 45,
                            ChangedDate = new DateTimeOffset(new DateTime(2020, 5, 5, 6, 4, 6, 299, DateTimeKind.Unspecified).AddTicks(7242), new TimeSpan(0, -7, 0, 0, 0)),
                            LoggedUserId = 1,
                            ProductId = 5,
                            Quantity = 20,
                            StoreId = 5
                        },
                        new
                        {
                            Id = 46,
                            ChangedDate = new DateTimeOffset(new DateTime(2020, 5, 5, 6, 4, 6, 299, DateTimeKind.Unspecified).AddTicks(7247), new TimeSpan(0, -7, 0, 0, 0)),
                            LoggedUserId = 1,
                            ProductId = 6,
                            Quantity = 20,
                            StoreId = 5
                        },
                        new
                        {
                            Id = 47,
                            ChangedDate = new DateTimeOffset(new DateTime(2020, 5, 5, 6, 4, 6, 299, DateTimeKind.Unspecified).AddTicks(7253), new TimeSpan(0, -7, 0, 0, 0)),
                            LoggedUserId = 1,
                            ProductId = 7,
                            Quantity = 20,
                            StoreId = 5
                        },
                        new
                        {
                            Id = 48,
                            ChangedDate = new DateTimeOffset(new DateTime(2020, 5, 5, 6, 4, 6, 299, DateTimeKind.Unspecified).AddTicks(7259), new TimeSpan(0, -7, 0, 0, 0)),
                            LoggedUserId = 1,
                            ProductId = 8,
                            Quantity = 20,
                            StoreId = 5
                        },
                        new
                        {
                            Id = 49,
                            ChangedDate = new DateTimeOffset(new DateTime(2020, 5, 5, 6, 4, 6, 299, DateTimeKind.Unspecified).AddTicks(7265), new TimeSpan(0, -7, 0, 0, 0)),
                            LoggedUserId = 1,
                            ProductId = 9,
                            Quantity = 20,
                            StoreId = 5
                        },
                        new
                        {
                            Id = 50,
                            ChangedDate = new DateTimeOffset(new DateTime(2020, 5, 5, 6, 4, 6, 299, DateTimeKind.Unspecified).AddTicks(7270), new TimeSpan(0, -7, 0, 0, 0)),
                            LoggedUserId = 1,
                            ProductId = 10,
                            Quantity = 20,
                            StoreId = 5
                        });
                });

            modelBuilder.Entity("ConsoleShopper.Domain.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("OrderDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("StoreId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("StoreId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CustomerId = 1,
                            OrderDate = new DateTimeOffset(new DateTime(2020, 5, 5, 6, 4, 6, 299, DateTimeKind.Unspecified).AddTicks(9242), new TimeSpan(0, -7, 0, 0, 0)),
                            StoreId = 1
                        },
                        new
                        {
                            Id = 2,
                            CustomerId = 1,
                            OrderDate = new DateTimeOffset(new DateTime(2020, 5, 5, 6, 4, 6, 299, DateTimeKind.Unspecified).AddTicks(9531), new TimeSpan(0, -7, 0, 0, 0)),
                            StoreId = 1
                        },
                        new
                        {
                            Id = 3,
                            CustomerId = 2,
                            OrderDate = new DateTimeOffset(new DateTime(2020, 5, 5, 6, 4, 6, 299, DateTimeKind.Unspecified).AddTicks(9549), new TimeSpan(0, -7, 0, 0, 0)),
                            StoreId = 2
                        },
                        new
                        {
                            Id = 4,
                            CustomerId = 3,
                            OrderDate = new DateTimeOffset(new DateTime(2020, 5, 5, 6, 4, 6, 299, DateTimeKind.Unspecified).AddTicks(9555), new TimeSpan(0, -7, 0, 0, 0)),
                            StoreId = 2
                        },
                        new
                        {
                            Id = 5,
                            CustomerId = 4,
                            OrderDate = new DateTimeOffset(new DateTime(2020, 5, 5, 6, 4, 6, 299, DateTimeKind.Unspecified).AddTicks(9561), new TimeSpan(0, -7, 0, 0, 0)),
                            StoreId = 4
                        },
                        new
                        {
                            Id = 6,
                            CustomerId = 5,
                            OrderDate = new DateTimeOffset(new DateTime(2020, 5, 5, 6, 4, 6, 299, DateTimeKind.Unspecified).AddTicks(9567), new TimeSpan(0, -7, 0, 0, 0)),
                            StoreId = 5
                        });
                });

            modelBuilder.Entity("ConsoleShopper.Domain.OrderLineItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("InventoryItemId")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderLineItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            InventoryItemId = 1,
                            OrderId = 1,
                            Price = 150.55m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 2,
                            InventoryItemId = 2,
                            OrderId = 1,
                            Price = 150.55m,
                            Quantity = 4
                        },
                        new
                        {
                            Id = 3,
                            InventoryItemId = 3,
                            OrderId = 1,
                            Price = 150.55m,
                            Quantity = 5
                        },
                        new
                        {
                            Id = 4,
                            InventoryItemId = 4,
                            OrderId = 1,
                            Price = 150.55m,
                            Quantity = 7
                        },
                        new
                        {
                            Id = 5,
                            InventoryItemId = 1,
                            OrderId = 2,
                            Price = 150.55m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 6,
                            InventoryItemId = 1,
                            OrderId = 3,
                            Price = 150.55m,
                            Quantity = 2
                        });
                });

            modelBuilder.Entity("ConsoleShopper.Domain.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProductCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Piano",
                            Price = 150.55m,
                            ProductCode = "P00001"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Flute",
                            Price = 150.55m,
                            ProductCode = "P00002"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Accordian",
                            Price = 150.55m,
                            ProductCode = "P00003"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Piccolo",
                            Price = 150.55m,
                            ProductCode = "P00004"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Trombone",
                            Price = 150.55m,
                            ProductCode = "P00005"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Violin",
                            Price = 150.55m,
                            ProductCode = "P00006"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Guitar",
                            Price = 150.55m,
                            ProductCode = "P00007"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Bagpipes",
                            Price = 150.55m,
                            ProductCode = "P00008"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Ukulele",
                            Price = 150.55m,
                            ProductCode = "P00009"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Saxophone",
                            Price = 150.55m,
                            ProductCode = "P00010"
                        });
                });

            modelBuilder.Entity("ConsoleShopper.Domain.Store", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.HasKey("Id");

                    b.ToTable("Stores");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Florida"
                        },
                        new
                        {
                            Id = 2,
                            Name = "New York"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Texas"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Washington"
                        },
                        new
                        {
                            Id = 5,
                            Name = "California"
                        });
                });

            modelBuilder.Entity("ConsoleShopper.Domain.UserType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Type = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Type = "Customer"
                        });
                });

            modelBuilder.Entity("ConsoleShopper.Domain.Customer", b =>
                {
                    b.HasOne("ConsoleShopper.Domain.UserType", "UserType")
                        .WithMany()
                        .HasForeignKey("UserTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ConsoleShopper.Domain.CustomerAddress", b =>
                {
                    b.HasOne("ConsoleShopper.Domain.Customer", "Customer")
                        .WithOne("CustomerAddress")
                        .HasForeignKey("ConsoleShopper.Domain.CustomerAddress", "CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ConsoleShopper.Domain.InventoryItem", b =>
                {
                    b.HasOne("ConsoleShopper.Domain.Product", "Product")
                        .WithMany("Inventory")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ConsoleShopper.Domain.Store", "Store")
                        .WithMany("Inventory")
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ConsoleShopper.Domain.Order", b =>
                {
                    b.HasOne("ConsoleShopper.Domain.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ConsoleShopper.Domain.Store", "Store")
                        .WithMany()
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ConsoleShopper.Domain.OrderLineItem", b =>
                {
                    b.HasOne("ConsoleShopper.Domain.Order", "Order")
                        .WithMany("OrderLineItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
